--- a/src/mms.c
+++ b/src/mms.c
@@ -54,7 +54,6 @@
 #include <errno.h>
 #include <stdlib.h>
 #include <time.h>
-#include <iconv.h>
 
 /********** logging **********/
 #define lprintf(...) \
@@ -447,17 +446,21 @@ static int send_command (mms_io_t *io, m
   return 1;
 }
 
-static int string_utf16(iconv_t url_conv, char *dest, char *src, int dest_len)
+static int string_utf16(char *dest, char *src, int dest_len)
 {
   char *ip = src, *op = dest;
   size_t ip_len = strlen(src);
-  size_t op_len = dest_len - 2; /* reserve 2 bytes for 0 termination */
 
-  if (iconv(url_conv, &ip, &ip_len, &op, &op_len) == (size_t)-1) {
+  if (2 * ip_len + 2 > dest_len) {
     lprintf("Error converting uri to unicode: %s\n", strerror(get_errno()));
     return 0;
   }
-  
+
+  while (ip_len--) {
+    *op++ = *ip++;
+    *op++ = 0x00;
+  }
+
   /* 0 terminate the string */
   *op++ = 0;
   *op++ = 0;
@@ -727,7 +730,6 @@ int static mms_choose_best_streams(mms_i
  */
 /* FIXME: got somewhat broken during xine_stream_t->(void*) conversion */
 mms_t *mms_connect (mms_io_t *io, void *data, const char *url, int bandwidth) {
-  iconv_t url_conv = (iconv_t)-1;
   mms_t  *this;
   int     res;
   uint32_t openid;
@@ -779,11 +781,6 @@ mms_t *mms_connect (mms_io_t *io, void *
     goto fail;
   }
   
-  url_conv = iconv_open("UTF-16LE", "UTF-8");
-  if (url_conv == (iconv_t)-1) {
-    lprintf("could not get iconv handle to convert url to unicode\n");
-    goto fail;
-  }
 
   /*
    * let the negotiations begin...
@@ -796,7 +793,7 @@ mms_t *mms_connect (mms_io_t *io, void *
   mms_gen_guid(this->guid);
   sprintf(this->str, "NSPlayer/7.0.0.1956; {%s}; Host: %s", this->guid,
           this->connect_host);
-  res = string_utf16(url_conv, this->scmd_body + command_buffer.pos, this->str,
+  res = string_utf16(this->scmd_body + command_buffer.pos, this->str,
                      CMD_BODY_LEN - command_buffer.pos);
   if(!res)
     goto fail;
@@ -825,7 +822,7 @@ mms_t *mms_connect (mms_io_t *io, void *
   mms_buffer_put_32 (&command_buffer, 0x00000000);
   mms_buffer_put_32 (&command_buffer, 0x00989680);
   mms_buffer_put_32 (&command_buffer, 0x00000002);
-  res = string_utf16(url_conv, this->scmd_body + command_buffer.pos,
+  res = string_utf16(this->scmd_body + command_buffer.pos,
                      "\\\\192.168.0.129\\TCP\\1037",
                      CMD_BODY_LEN - command_buffer.pos);
   if(!res)
@@ -864,7 +861,7 @@ mms_t *mms_connect (mms_io_t *io, void *
     mms_buffer_put_32 (&command_buffer, 0x00000000); /* ?? */
     mms_buffer_put_32 (&command_buffer, 0x00000000); /* ?? */
 
-    res = string_utf16(url_conv, this->scmd_body + command_buffer.pos,
+    res = string_utf16(this->scmd_body + command_buffer.pos,
                        this->uri, CMD_BODY_LEN - command_buffer.pos);
     if(!res)
       goto fail;
@@ -974,7 +971,6 @@ mms_t *mms_connect (mms_io_t *io, void *
     }
   }
 
-  iconv_close(url_conv);
   lprintf("connect: passed\n");
  
   return this;
@@ -982,9 +978,6 @@ mms_t *mms_connect (mms_io_t *io, void *
 fail:
   mms_close(this);
 
-  if (url_conv != (iconv_t)-1)
-    iconv_close(url_conv);
-
   return NULL;
 }
 
